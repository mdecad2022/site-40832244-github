<h1>40832244的倉儲</h1>
<p></p>
<p></p>
<p><img alt="" height="220" src="/images/貓貓.jpg" width="229"/></p>
<p></p>
<p>40832244的網站 : <a href="https://mdecad2022.github.io/site-40832244-github/content/index.html">https://mdecad2022.github.io/site-40832244-github/content/index.html</a></p>
<p>40832244的倉儲:<a href="https://github.com/mdecad2022/site-40832244-github">https://github.com/mdecad2022/site-40832244-github</a></p>
<p>cmsite(課程倉儲) : wcms use <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> as submodule</p>
<p>-------------------------------------------------------------------------------------------------------</p>
<p></p>
<p></p>
<h1>HW</h1>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/W6.html">W6</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/W8.html">W8</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/W10.html">W10</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/W11.html">W11</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/W12.html">W12</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/W13.html">W13</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/w14.html">W14</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/W15.html">W15</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/W16.html">W16</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/期末作業.html">期末作業</a></p><h2>W6</h2>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/%E9%9B%B6%E4%BB%B6.html">零件 : https://mdecad2022.github.io/site-40832244-github/content/%E9%9B%B6%E4%BB%B6.html</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/%E7%B5%84%E5%90%88.html">組合 : https://mdecad2022.github.io/site-40832244-github/content/%E7%B5%84%E5%90%88.html</a></p>
<h3>零件</h3>
<p></p>
<p>***由於剛開始繪製之零件1-12是使用wink3所錄製，測試過多次無法錄製完成就跳中止視窗，所以後續繪圖使用內建錄影來呈現，1-12之繪圖歷程可透過連結查看***</p>
<p></p>
<p>1.<a href="https://cad.onshape.com/documents/9d369030b77a5988e12b12fe/w/2821f533e9f7bc5d4dd00400/e/aa59f8eca83a901994c0ddf0?renderMode=0&amp;uiState=63624cc452cea82f364bd0bf">6203RS Bearing_step</a>  <span>(無影片)</span></p>
<p>2.<a href="https://cad.onshape.com/documents/75d8c564178af9fec3de4211/w/5a17abd04c6ad0561c95a309/e/b5b164dbe7c97347d9a8093d?renderMode=0&amp;uiState=63624c4abf72cf6c1dbf6c7b">Ball bearing _ODC32-IDC12__step</a> <span> (無影片)</span></p>
<p>3.<a href="https://cad.onshape.com/documents/d1d448e5098e6ecfbaf5a766/w/91c803968897fb05a71c81c2/e/4aee4f913e2fddb693300712?renderMode=0&amp;uiState=63624d8852cea82f364bd14e">Base clamp_step</a> <span>(無影片)</span></p>
<p>4.<a href="https://cad.onshape.com/documents/7e402d167ee2d5e73122f275/w/69d19987afa234b7467d25fd/e/f905beaa3347c17c274fb8d4?renderMode=0&amp;uiState=63624f38bf72cf6c1dbf70ae">Base_step</a> <span>(無影片)</span></p>
<p>5.<a href="https://cad.onshape.com/documents/b202003f593662c24932560f/w/e66b1d019d4d30e29e1df309/e/f9dc2018d7b49150d8966aca?renderMode=0&amp;uiState=63624d0052cea82f364bd0d9">Bolt_1_step</a> <span>(無影片)</span></p>
<p>6.<a href="https://cad.onshape.com/documents/4bbbb05bc4cc982926e7ad10/w/d156492a788225ace51322da/e/62129bfbd447209eb6c8690c?renderMode=0&amp;uiState=63624c1a1f312259d8b6f49b">Bolt_step</a> <span>(無影片)</span></p>
<p>7.<a href="https://cad.onshape.com/documents/fe39c6a0a6fecd67669b829e/w/fb9465aa4669dc86b5dc895f/e/06737bb457dafb6a196fb129?renderMode=0&amp;uiState=63624cd11f312259d8b6f533">Bottom safety guard_step</a> <a href="https://youtu.be/opC1mBvfF5Y">影片(00:00-10:03)</a></p>
<p>8.<a href="https://cad.onshape.com/documents/7874b6e746950b9e0684e346/w/4ae486e65def9598abaf7168/e/4522a610e7ba3bff608624d6?renderMode=0&amp;uiState=63624c28bf72cf6c1dbf6c72">Clamp_step</a> <a href="https://youtu.be/opC1mBvfF5Y">影片(15:33-20:16)</a></p>
<p>9.<a href="https://cad.onshape.com/documents/fbfa9d7cb3de9dae29e6429f/w/ca2db84d9eb5f319a0ec55fb/e/9db2cbeeeebc48d1d5fbc3dc?renderMode=0&amp;uiState=63624d5852cea82f364bd13f">Column_step</a> (無影片)</p>
<p>10.<a href="https://cad.onshape.com/documents/0c541391e401f7cfea84cedd/w/88f081e6d127e5d7de6c43e5/e/bc216a7dc237595793a4c567?renderMode=0&amp;uiState=63624b46bf72cf6c1dbf6c49">Drill chuck _B16 0.5-13mm__step</a> <a href="https://youtu.be/opC1mBvfF5Y">影片(28:24.-39:06)</a></p>
<p>11.<a href="https://cad.onshape.com/documents/227f8a1db3fac1c12782c17b/w/86d4f3189f1497f7f691292d/e/499453cf5c4b646a09355f7b?renderMode=0&amp;uiState=63624cf31f312259d8b6f55c">Driven pulley_step</a> <a href="https://youtu.be/opC1mBvfF5Y">影片(48:10-1:00:22)</a></p>
<p>12.<a href="https://cad.onshape.com/documents/468e40b92788f434a33fa462/w/4c9a78d0e7b4205e7dd397ee/e/643c671b0273d5949184ebc8?renderMode=0&amp;uiState=63624d1d52cea82f364bd0e9">Feed handle axle_step</a> <span>(無影片)</span></p>
<p>13.<a href="https://cad.onshape.com/documents/0f6949a12586a2a51f7d1ffa/w/5e6b0b53528926c0be350e29/e/94c6646be78a627f2986850e?renderMode=0&amp;uiState=63624bc252cea82f364bd01b">Head_step</a> <a href="https://youtu.be/Qt2fUitYayw">影片</a></p>
<p>14.<a href="https://cad.onshape.com/documents/f1c240c674fb0ad3bd0592cf/w/7f8fdc3ecfe12dd2771cfef3/e/950489bb2e54c305c3041bdf?renderMode=0&amp;uiState=63624d3752cea82f364bd0fd">Knob axle_step</a> <a href="https://youtu.be/bEjddtq_Mt4">影片</a></p>
<p>15.<a href="https://cad.onshape.com/documents/b7ca14a0013fe1ae19182e9b/w/a74d0461a2a5cf88645d3a75/e/f5fd1ba8cd6a2afbff0c117b?renderMode=0&amp;uiState=63624bb4bf72cf6c1dbf6c67">Motor tensioner clamp_step</a> <a href="https://youtu.be/PMGPJzTe4nE">影片</a></p>
<p>16.<a href="https://cad.onshape.com/documents/058b507de17ecbfc1f8e959e/w/eefe8e0aa1e688bfb8e07c41/e/4f478b6885e92cf460b5a97a?renderMode=0&amp;uiState=63624ba852cea82f364bd00d">Motor tensioner_step</a> <a href="https://youtu.be/9XsB_nVEWLE">影片</a></p>
<p>17.<a href="https://cad.onshape.com/documents/c059bdec42f9313b0e2f63f0/w/ae8b988433dd09f2cc565a1c/e/774db03b4d010bf4b96b1d37?renderMode=0&amp;uiState=63624d0dbf72cf6c1dbf6fb3">Motor_step</a> <a href="https://youtu.be/kIyH0KbeSNs">影片</a></p>
<p>18.<a href="https://cad.onshape.com/documents/3ab666455eaaa6e675b37dfc/w/a9464bf09e8b52038b2ab261/e/abdbe5f61d2b7145c3e9fbf3?renderMode=0&amp;uiState=63624cb852cea82f364bd0b8">Part 1_1_step</a> <a href="https://youtu.be/L_cZpGnklAQ">影片</a></p>
<p>19.<a href="https://cad.onshape.com/documents/542b2733b28c930e60726603/w/8f502da5e8dab9b3efcd8bc4/e/0bf50c84371a527d17e8d4cd?renderMode=0&amp;uiState=63624d661f312259d8b6f583">Part 1_step</a> <a href="https://youtu.be/1nBrEOc9uIM">影片</a></p>
<p>20.<a href="https://cad.onshape.com/documents/8bf7bb931cd72153d29d84f7/w/b2456534fa925c8e60ed3bda/e/c70f022c32b942af2d80f9ba?renderMode=0&amp;uiState=63624b964f9a7a2f890a354b">Pulley_step</a> <a href="https://youtu.be/PNL_Ze0QO9k">影片</a></p>
<p>21.<a href="https://cad.onshape.com/documents/ad3c3ec678bb85dd74a13ffb/w/fa608be94f75b20d9b64e610/e/554b2fed51b0103a93f21281?renderMode=0&amp;uiState=63624c78bf72cf6c1dbf6f53">Rubber gasket_step</a> <a href="https://youtu.be/n_po9MU3xQc">影片</a></p>
<p>22.<a href="https://cad.onshape.com/documents/84f90f137b4b9ffa159af1e5/w/d40050fcdbf07dddca884686/e/f23567f9532ff5fd083c81a5?renderMode=0&amp;uiState=63624d46bf72cf6c1dbf6fcd">Rubber knob_step</a> <a href="https://youtu.be/GFDJE90Zin8">影片</a></p>
<p>23.<a href="https://cad.onshape.com/documents/3d5bba15c60406cb1f57a974/w/6f0cedc26d38aaf8ff70be53/e/9b5b639e878b680c50253dcc?renderMode=0&amp;uiState=63624ca952cea82f364bd0b0">Spindle guide_step</a> <a href="https://youtu.be/yupJr0x8S3g">影片</a></p>
<p>24.<a href="https://cad.onshape.com/documents/910bbcd096ca6de542106461/w/1cecd022892557906e3883a2/e/97602db7fcc5e44f581a16a2?renderMode=0&amp;uiState=63624b641f312259d8b6f45d">Spindle lock screw and nut_step</a> <a href="https://youtu.be/fnTGHP_VxFY">影片</a></p>
<p>25.<a href="https://cad.onshape.com/documents/1ea1a2b6f0fa1b3352f502e5/w/de44d317a545cfaadbcf037e/e/d04bcf81188400cfec633435?renderMode=0&amp;uiState=63624c8852cea82f364bd0a7">Spindle_step</a> <a href="https://youtu.be/pH_VjXKLJH4">影片</a></p>
<p>25.<a href="https://cad.onshape.com/documents/e71327f4e57efc9eecd4cee1/w/ba9960945cbca8221db84c5b/e/d22db80ac1af0e4c0baccab6?renderMode=0&amp;uiState=63624c5a52cea82f364bd097">Spline guider_step</a><a href="https://youtu.be/ndldNeDGC18"> 影片</a></p>
<p>26.<a href="https://cad.onshape.com/documents/8446159b8e613632e43bc796/w/55575d9b651d77257e50b203/e/6af54fd5209adf9545a71501?renderMode=0&amp;uiState=63624b83bf72cf6c1dbf6c50">Spring cap_step</a> <a href="https://youtu.be/PIAJuhqXJKo">影片</a></p>
<p>27.<a href="https://cad.onshape.com/documents/1c9087531bde4234893c9213/w/09e6f1968ab51c990079ad27/e/fd857449f51f92a21ed26dfd?renderMode=0&amp;uiState=63624b7452cea82f364bcfb6">Spring nut_step</a> <a href="https://youtu.be/_5rjNyJaa5E">影片</a></p>
<p>29.<a href="https://cad.onshape.com/documents/a0f58a673e23ebd6b6e85763/w/54d876af8451f0721b465f96/e/cac6eb77f20d178865296d1d?renderMode=0&amp;uiState=63624be052cea82f364bd029">Start Stop_step</a> <a href="https://youtu.be/nOacYmBCcNc">影片</a></p>
<p>30.<a href="https://cad.onshape.com/documents/92ef0b3f33b32ad1a5ad209c/w/ba78cd06ab11afba4dc3651f/e/4aa808d76fa057d5b11cf429?renderMode=0&amp;uiState=63624bef52cea82f364bd03b">Table clamp_step</a> <a href="https://youtu.be/PYGEJL5hK0o">影片</a></p>
<p>31.<a href="https://cad.onshape.com/documents/799de2d937b9bf3f2eecbf64/w/ee3931157d054eac395a6101/e/e44f23f7714b23c1d76498e4?renderMode=0&amp;uiState=63624c381f312259d8b6f4d5">Table_step</a> <a href="https://youtu.be/3V7B2VWKxbY">影片</a></p>
<p>32.<a href="https://cad.onshape.com/documents/873c081dc1e862ddc96bdcfe/w/fcf21f00a9cfe5972f9e65d2/e/fc9909a8f75c26573f491407?renderMode=0&amp;uiState=63624ce44f9a7a2f890a37a5">Top safety guard_step</a> <a href="https://youtu.be/MTsw-Bc0vFw">影片</a></p>
<p></p>
<h3>組合</h3>
<p>1.<a href="https://cad.onshape.com/documents/bcd880e2f34ebe92cc2810bc/w/5c08dbf280fd1e676741c385/e/46647f4143faaec7afb8a571?renderMode=0&amp;uiState=63624e25bf72cf6c1dbf700b">Base subassy L1G_step</a> <a href="https://youtu.be/sqbPKQi2mTg">影片</a></p>
<p>2.<a href="https://cad.onshape.com/documents/3d246463e60c7e9389fbc82c/w/1bd39761d6f6a409abf99e47/e/75a405d1f70528957998dc04?renderMode=0&amp;uiState=63624e8abf72cf6c1dbf7062">Feed handle subassy L1G_step</a> <a href="https://youtu.be/tzN1di5UI7A">影片</a></p>
<p>3.<a href="https://cad.onshape.com/documents/f878ccc5bc13659db22bd450/w/9ed4bd9516d8077a0b5edd58/e/1673bb1e390ac59a1e801a26?renderMode=0&amp;uiState=63624e6852cea82f364bd451">Spindle spline guider L1G_step</a> <a href="https://youtu.be/wwbB6GOpQjk">影片</a></p>
<p>4.<a href="https://cad.onshape.com/documents/558779a4f51141f3bad0c2fb/w/8b6e8ed227d013a05991ee68/e/83f96a74467d7ad4273b185e?renderMode=0&amp;uiState=63624e8052cea82f364bd45a">Spindle subassy L1G_step</a> <a href="https://youtu.be/_fAEOSecjz4">影片</a></p>
<p>5.<a href="https://cad.onshape.com/documents/a0fb0dd94f487262ab8244b1/w/92a018d910f45e288e00fedb/e/e3e6220e18c4ecf984382123?renderMode=0&amp;uiState=63624e52bf72cf6c1dbf7049">Head subassy L1G_step</a> <a href="https://youtu.be/HRIdEo3IjLg">影片</a></p>
<p>6.<a href="https://cad.onshape.com/documents/21b923dac308aab86c973d3d/w/2cdc2e2b06b6e745fc8c3222/e/faff41deac8d6a23bbe2a9a3?renderMode=0&amp;uiState=63624e311f312259d8b6f5de">Motor subassy L1G_step</a> <a href="https://youtu.be/0MUNxfsjWds">影片</a></p>
<p>7.<a href="https://cad.onshape.com/documents/22e67f93fd968ac0986ec7cb/w/6f141e2afcfb3d4a99209124/e/39919c5b63556586f701e60c?renderMode=0&amp;uiState=63624e3dbf72cf6c1dbf7025">Safety guard subassy L1G_step</a> <a href="https://youtu.be/7W6Q1zSnu8w">影片</a></p>
<p>8.<a href="https://cad.onshape.com/documents/23113af5e954cc1d7541e485/w/d481b71d5d2a09a236c4c22f/e/a9c7e754abf9e63d6ac5ee03?renderMode=0&amp;uiState=63624e5c1f312259d8b6f5eb">Table subassy L1G_step</a> <a href="https://youtu.be/H77yU1Xogqo">影片</a></p>
<p>9.<a href="https://cad.onshape.com/documents/9783006970173b70d5c171dc/w/7945f7b66a213ce4c244f3b1/e/9396f4eda88a8a0daf9717ff?renderMode=0&amp;uiState=63624e184f9a7a2f890a391f">Drill press - Ferm FTB-13M_1</a> <a href="https://youtu.be/zvM3IcXx3sA"><span>影片</span></a></p>
<p></p>
<h2>W8</h2>
<p><a href="https://cad.onshape.com/documents/ede0f1fb37f0ffec0ca5c42d/w/281897c841811ae528afdf05/e/c3d7fde288f623a1b61cccab?renderMode=0&amp;uiState=63624ec5bf72cf6c1dbf708b">w8 課堂練習 <span>Base clamp_step</span></a> <a href="https://youtu.be/okNgraOn0yM">影片</a></p>
<p><a href="/downloads/W8-Base clamp_step.zip">零件檔</a></p>
<p><img alt="" height="316" src="/images/w8-onshape.jpg" width="682"/><img alt="" height="316" src="/images/NX .jpg" width="682"/></p>
<p></p>
<p>Wink Video</p>
<script>
var winkVideoData_4083224 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_40832244" height="630" muted="true" width="1008">
<source src="/downloads/W8 課堂練習.mp4" type="video/mp4"/></video></div>
<h2>W10</h2>
<p>W10-1:列出缺考人員</p>
<p>w10-2:列出考試人員和成績</p>
<p><button id="W10-1">W10-1</button><button id="W10-2">W10-2</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40832244-github/78ef5bbdf31154f94fcac0950384500b/raw/a443dc183c38ee13a13ff15c9c22b1e6407e856b/notestname.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/40832244-github/78ef5bbdf31154f94fcac0950384500b/raw/a443dc183c38ee13a13ff15c9c22b1e6407e856b/notestname.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "w11" 的按鈕點按時, 執行 add 方法
doc["W10-1"].bind('click', add)
</script>
</p>
<p><!-- w11 結束--></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/40832244-github/78ef5bbdf31154f94fcac0950384500b/raw/a21d3ab766cac2121c4909a239ddf406bae807eb/HW-10-2.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "w11" 的按鈕點按時, 執行 add 方法
doc["W10-2"].bind('click', add)
</script>
</p>
<p><!-- w11 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form abframeid="iframe.0.9192231242352396" abineguid="401FC5451643458E86F9E1C4948679F5"><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p></p>
<h2>W11</h2>
<p>W11-1:缺考人數</p>
<p>w11-2:本次小考平均分數</p>
<p><button id="W11-1">W11-1</button><button id="W11-2">W11-2</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40832244-github/0f066b062956bcbbe23985b902863212/raw/3d94d9ffde0398ba1f0ac57f951cfea50532400c/HW11_list.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/40832244-github/0f066b062956bcbbe23985b902863212/raw/3d94d9ffde0398ba1f0ac57f951cfea50532400c/HW11_list.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "w11" 的按鈕點按時, 執行 add 方法
doc["W11-1"].bind('click', add)
</script>
</p>
<p><!-- w11 結束--></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/40832244-github/0a46a3c369c3ecb46be865696b23b281/raw/fc0dccf14777ad610fea193f28ef0e9a34624431/HW_average.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "w11" 的按鈕點按時, 執行 add 方法
doc["W11-2"].bind('click', add)
</script>
</p>
<p><!-- w11 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form abframeid="iframe.0.9192231242352396" abineguid="401FC5451643458E86F9E1C4948679F5"><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p></p>
<h2>W12</h2>
<p>W12:W10延伸題目</p>
<div>1.如何直接讓使用者利用瀏覽器接受 <a href="https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/fbadccd8fce09ad97db246bfd4538e8a6998099d/cad2022_w10_2b_quiz_result.json" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/fbadccd8fce09ad97db246bfd4538e8a6998099d/cad2022_w10_2b_quiz_result.json">w10 2b 考試結果 JSON 檔案</a>上傳, 然後直接列出考試結果, 缺考名單與該次考試的平均分數?</div>
<p><button id="W12">W12</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40832244-github/e7e2fae5cf403975bfcf4c7dc15c7d9c/raw/4914ea5da6699521062382ba31d13ae0e6b6c0ab/W12.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/40832244-github/e7e2fae5cf403975bfcf4c7dc15c7d9c/raw/4914ea5da6699521062382ba31d13ae0e6b6c0ab/W12.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "w11" 的按鈕點按時, 執行 add 方法
doc["W12"].bind('click', add)
</script>
</p>
<p><!-- w11 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form abframeid="iframe.0.9192231242352396" abineguid="401FC5451643458E86F9E1C4948679F5"><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p></p>
<h2>W13</h2>
<p><a href="/downloads/w13 one link robot 零組件繪圖與模擬.zip">零件檔案</a></p>
<p><img caption="false" height="312" src="/images/link.jpg" width="400"/></p>
<p><img caption="false" height="303" src="/images/base.jpg" width="400"/></p>
<p><img alt="" height="262" src="/images/shaft.jpg" width="400"/></p>
<p><img alt="" height="346" src="/images/assemble.jpg" width="400"/></p>
<p><img alt="" height="212" src="/images/assemble_cop.jpg" width="400"/></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/bAnOO2G1B58" width="560"></iframe></p>
<h2>w14</h2>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/Sovelspace.html">Sovelspace</a>      <a href="https://mdecad2022.github.io/site-40832244-github/content/Onshape.html">Onshape</a>     <a href="https://mdecad2022.github.io/site-40832244-github/content/NX.html">NX</a></p>
<p></p>
<div>在頁面列出 w14 缺考者名單</div>
<div>請複製此輸入Url
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">https://nfu.cycu.org/?semester=1111&amp;courseno=0786&amp;column=True,https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/41ef20244a885c3daba8ee77652fd0717d3abda2/cad2022_w14_2b_quiz.json</pre>
</div>
<p><button id="W12">W14</button><button id="W14">W14(no input)</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40832244-github/7df08bbb14d4e9cbe9a3b0be5a4d67b4/raw/d8235321cdea1bc040befbe82c5612dddbfbdcb4/W14_teaxher.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/40832244-github/7df08bbb14d4e9cbe9a3b0be5a4d67b4/raw/d8235321cdea1bc040befbe82c5612dddbfbdcb4/W14_teaxher.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "w11" 的按鈕點按時, 執行 add 方法
doc["W12"].bind('click', add)
</script>
</p>
<p><!-- w11 結束--></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/40832244-github/25af017dbfd44dbb7f5262779fc008a5/raw/c37fd6b59f09b76b5ef3a1c129377b062c30df3d/w14.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "w11" 的按鈕點按時, 執行 add 方法
doc["W14"].bind('click', add)
</script>
</p>
<p><!-- w11 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form abframeid="iframe.0.9192231242352396" abineguid="401FC5451643458E86F9E1C4948679F5"><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p></p>
<h3>Sovelspace</h3>
<p><a href="/downloads/Solvespace零件檔.zip">零件檔</a></p>
<p>base</p>
<p><img alt="" height="318.125" src="/images/base-solvespace.jpg" width="600"/></p>
<p>shaft</p>
<p><img alt="" height="319" src="/images/shaft-solvespace.jpg" width="600"/></p>
<p>link</p>
<p><img alt="" height="318" src="/images/link-solvespace.jpg" width="600"/></p>
<p>assembly</p>
<p><img alt="" height="318" src="/images/assemble-solvespace.jpg" width="600"/></p>
<p>Wink Video</p>
<script>
var winkVideoData_4083224 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_40832244" height="630" muted="true" width="1008">
<source src="/downloads/w13_one_link_robot_solvespace .mp4" type="video/mp4"/></video></div>
<h3>Onshape</h3>
<p><a href="https://cad.onshape.com/documents/22c70f0a78a5e85861c28f4d/w/a11579cbb9b94e5e5a03a086/e/7ca1911808e20235896bc3e4">base</a></p>
<p><img caption="false" height="278" src="/images/base-onshape.jpg" width="600"/></p>
<p><a href="https://cad.onshape.com/documents/a8acec08874ef9cc84ab9281/w/88f68ec869d55e8a77d1fca8/e/b6230497eaee208a37590bc9">shaft</a></p>
<p><img alt="" height="278" src="/images/shaft-onshape.jpg" width="600"/></p>
<p><a href="https://cad.onshape.com/documents/38a384356cb3912c3fcb11a5/w/a62003f5504ed77634571fb9/e/8e042b9afb03badc4218cd3a">link</a></p>
<p><img alt="" height="278" src="/images/link-onshape.jpg" width="600"/></p>
<p><a href="https://cad.onshape.com/documents/c9e0c98d8c8ba59fb1dd8ad4/w/ca5f85e1206941130919be11/e/0b4c7cd2681d381dde35f3f0?renderMode=0&amp;uiState=639aa9ae747f616eea7ca0d9">assembly</a></p>
<p><img alt="" height="278" src="/images/assembly-onshape.jpg" width="600"/></p>
<p>Wink Video</p>
<p></p>
<script>
var winkVideoData_40832244 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_40832244" height="600" muted="true" width="800">
<source src="/downloads/w13_one_link_robot_onshape .mp4" type="video/mp4"/></video></div>
<h3>NX</h3>
<p><a href="/downloads/NX零件圖.zip">零件檔</a></p>
<p>base</p>
<p><img alt="" height="318" src="/images/base-NX12.jpg" width="600"/></p>
<p>shaft</p>
<p><img alt="" height="318" src="/images/shaft-NX12.jpg" width="600"/></p>
<p>link</p>
<p><img alt="" height="318" src="/images/link-NX12.jpg" width="600"/></p>
<p>Wink Video</p>
<p></p>
<script>
var winkVideoData_40832244 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_40832244" height="600" muted="true" width="800">
<source src="/downloads/w13_one_link_robot_NX12 .mp4" type="video/mp4"/></video></div>
<h2>W15</h2>
<p><a href="/downloads/雙軸零件檔.zip">組立零件檔</a></p>
<p>更改python的路徑<img alt="" height="314" src="/images/更改路徑.jpg" width="600"/></p>
<p>過程中發生的問題:這次練習是照著老師上課內容，雖然更改完路徑重開後還是無法利用鍵盤驅動，猜測應該是程式的部分有錯誤，造成無法驅動組立。(此問題在<a href="https://mdecad2022.github.io/site-40832244-github/content/%E6%9C%9F%E6%9C%AB%E8%80%83%E9%80%B1.html">期末考週</a>已有<a href="https://mdecad2022.github.io/site-40832244-github/content/%E8%A7%A3%E6%B1%BA%E8%BE%A6%E6%B3%95.html">解決辦法</a>)</p>
<p><img alt="" height="72" src="/images/螢幕擷取畫面 2022-12-31 180947.jpg" width="600"/></p>
<p><a href="/downloads/W16 double joint.ttt">CoppeliaSim模擬檔案</a></p>
<p>Wink Video</p>
<script>
var winkVideoData_4083224 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_40832244" height="630" muted="true" width="1008">
<source src="/downloads/雙軸.mp4" type="video/mp4"/></video></div><h2>W16</h2>
<div>列出缺考人員與得分</div>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">https://nfu.cycu.org/?semester=1111&amp;courseno=0786&amp;column=True,https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/10f495ddcd065511d076b588aed11c5d6efa8ea7/2b_w16_quiz.json
</pre>
<p><button id="W12">W16</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40832244-github/be09b29d26bfc7e79ed5510bec78690e/raw/283e8d556d9c78d2444820d72a3eb012179b3d23/W16input.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/40832244-github/be09b29d26bfc7e79ed5510bec78690e/raw/283e8d556d9c78d2444820d72a3eb012179b3d23/W16input.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "w11" 的按鈕點按時, 執行 add 方法
doc["W12"].bind('click', add)
</script>
</p>
<p><!-- w11 結束--></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/40832244-github/25af017dbfd44dbb7f5262779fc008a5/raw/c37fd6b59f09b76b5ef3a1c129377b062c30df3d/w14.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "w11" 的按鈕點按時, 執行 add 方法
doc["W14"].bind('click', add)
</script>
</p>
<p><!-- w11 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form abframeid="iframe.0.9192231242352396" abineguid="401FC5451643458E86F9E1C4948679F5"><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p></p><h2>期末作業</h2>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/%E8%A7%A3%E6%B1%BA%E8%BE%A6%E6%B3%95.html">解決辦法</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/%E5%BD%88%E7%8F%A0%E6%AA%AF%E7%A8%8B%E5%BC%8F%E7%A2%BC.html">驅動彈珠檯程式碼</a></p>
<p>(在繪製彈珠台的過程中因為電腦性能不足，試著邊畫邊錄但都是以電腦當機結果要重新開機。過程中有組好第一個彈珠台放到CoppeliaSim中模擬，但發現有干涉，所以有進行更改尺寸。)</p>
<p><a href="/downloads/期末.zip">彈珠檯零件</a></p>
<p><img alt="" height="432" src="/images/彈珠檯.jpg" width="600"/></p>
<p><a href="/downloads/pinball_final_test.ttt">CoppeliaSim彈珠檯</a></p>
<p>Wink Video</p>
<script>
var winkVideoData_4083224 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_40832244" height="630" muted="true" width="1008">
<source src="/downloads/期末考彈珠台.mp4" type="video/mp4"/></video></div>
<p>分析結果:未使用程式模擬時可知彈珠台做動是沒問題的，但是程式加入後發現會跳出錯誤通知，與W15做的雙軸組立有一樣的結果，使用老師給的檔案後發現老師給的檔案與有一樣的問題，所跳出得錯誤通知對應到的程式碼並非上課學到的內，上網找了許多網站但也並為得到解答。</p>
<p></p><h3>解決辦法</h3>
<p>(由41023237協助)</p>
<p><a href="/downloads/pinball_final_test2.ttt">完成彈珠台檔案</a></p>
<p>將start_ipv4.bat拖到小白窗，將python後的數字更改為38(因為我所使用的python是38版，若10板不需更改)</p>
<p><img alt="" height="338" src="/images/2022115.jpg" width="600"/></p>
<p>更改完後點開start_ipv4.bat，輸入以下兩串指令</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">pip insatll znmp
pip install cbor</pre>
<p>下載後重開則完成設定，就能啟動指令做動</p>
<p>Wink Video</p>
<script>
var winkVideoData_4083224 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_40832244" height="630" muted="true" width="1008">
<source src="/downloads/彈珠台2.mp4" type="video/mp4"/></video></div><h3>彈珠檯程式碼</h3>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">#python
 
def sysCall_thread():
    sim.setThreadAutomaticSwitch(True)
    print( "From threaded Python child script, threadMain")
     
    joint1=sim.getObject('./left_joint')
    joint2=sim.getObject('./right_joint')
    hammer1=sim.getObject('./left_link')
    hammer2=sim.getObject('./right_link')
 
    velocity1 = 0
    velocity2 = 0
    hammer1_back = 0
    hammer2_back = 0
    torque1 = 0
    torque2 = 0
    orientation1=sim.getJointPosition(joint1,sim.handle_world)
    orientation2=sim.getJointPosition(joint2,sim.handle_world)
         
    while sim.getThreadExistRequest() == False:
        message, auxiliaryData, auxiliaryData2 = sim.getSimulatorMessage()
        if (message == sim.message_keypress):
            if (auxiliaryData[0] == ord("f")):
                print("f is pressed")
                velocity1 = 100
                torque1 = 200
                hammer1_back = 0
            if (auxiliaryData[0] == ord("d")):
                print("d is pressed")
                hammer1_back = 1
                torque1 = -200
                velocity1 = -100
            if (auxiliaryData[0] == ord("k")):
                print("k is pressed")
                velocity2 = 100
                torque2 = 200
                hammer2_back = 0
            if (auxiliaryData[0] == ord("j")):
                print("j is pressed")
                hammer2_back = 1
                torque2 = -200
                velocity2 = -100
        if hammer1_back == 1:
            sim.setJointPosition(joint1, -1, orientation1)
        if hammer2_back == 1:
            sim.setJointPosition(joint2, +1, orientation2)
        sim.setJointTargetPosition(joint1, velocity1)
        sim.setJointTargetPosition(joint2, velocity2)
        </pre>
<p></p><h1>Note</h1>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/%E7%B7%A8%E8%BC%AF%E5%AD%90%E6%A8%A1%E7%B5%84(cmsimde).html">編輯子模組(cmsimde)</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/ADD,%20REMOVE%20OR%20CHANGE%20PASSPHRASE%20OF%20AN%20SSH%20KEY.html">ADD, REMOVE OR CHANGE PASSPHRASE OF AN SSH KEY</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/Brython%20編輯.html">Brython編寫</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/python%E7%AD%86%E8%A8%98.html">python筆記</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/當大型擋住無法上傳時解決辦法.html">當大型擋住無法上傳時解決辦法</a></p>
<p><a href="https://mdecad2022.github.io/site-40832244-github/content/製作wink影片.html">製作wink影片</a></p><h2>編輯子模組(cmsimde)</h2>
<p><a href="https://stackoverflow.com/questions/19508849/how-to-fix-broken-submodule-config-in-git">參考網站</a> </p>
<p>進入編輯網頁後之編輯指令:(向下 : J 向上 : K 刪除 : DD)</p>
<p>1.進入倉儲(cd s) <span>➞ 進入</span>.git(cd .git)，使用指令(vi config)進入編輯comfig</p>
<p><img alt="" height="344" src="/images/vi config.jpg" width="652"/></p>
<p>使用dd刪除紅框內之文字 ➞ Esc ➞ : ➞ wq ➞ 完成編輯 </p>
<p></p>
<p>2.退回至倉儲(cd ..) <span>➞ 使用指令(vi .gitmodules)進入編輯.gitmodules</span></p>
<p><img alt="" height="344" src="/images/vi modules.jpg" width="652"/></p>
<p>使用dd刪除紅框內之文字 ➞ Esc ➞ : ➞ wq ➞ 完成編輯 </p>
<p></p>
<p>3.在倉儲執行 <span>➞ </span>rm -rf cmsimde</p>
<p></p>
<p>4.執行 <span>➞ </span>git rm --cached cmsimde</p>
<p></p>
<p>5.執行 <span>➞ </span>rm -rf cmsimde/modules</p>
<p></p>
<p>6.執行 <span>➞ </span>git submodules add <a href="https://github.com/mdecycu/cmsimde/tree/633fcf23bab14bb6817f01df5c26c1513fc45b08">https://github.com/mdecycu/cmsimde</a> cmsimde</p>
<p><code></code></p>
<p><span face="monospace" style="font-family: monospace;">完成修復cmsinde子模組 ! ! !</span></p>
<p><span face="monospace" style="font-family: monospace;"></span></p>
<h2>ADD, REMOVE OR CHANGE PASSPHRASE OF AN SSH KEY</h2>
<p><a href="https://www.simplified.guide/ssh/set-remove-passphrase"><span face="monospace" style="font-family: monospace;">參考網站</span></a></p>
<p><span face="monospace" style="font-family: monospace;"><img alt="" height="161" src="/images/8b62.jpg" width="961"/></span></p>
<p><span face="monospace" style="font-family: monospace;">1.輸入: ssh-keygrn -p</span></p>
<p><span face="monospace" style="font-family: monospace;">2.Enter file in which the key is (/home/cad40832244/.ssh/id_rsa): 即為括弧內顯示之檔案，只需要按下Enter</span></p>
<p>3.Enter old passphrase: 輸入舊的密碼</p>
<p>4.輸入完成會顯示: Key has comment 'cad40832244@tcexam'</p>
<p>4.Enter new passphrase (empty for no passphrase): 若需要更改或新增密碼則須輸入新的密碼，若不需要則不需輸入直接按Enter</p>
<p>5.Enter same passphrase again: 若更改或新增密碼就再輸入一次新密碼，刪除密碼就直接按Enter</p>
<p>6.輸入完成會顯示: Your identification has been saved with the new passphrase. 則完成更改、新增或刪除密碼 ! ! !</p>
<p></p>
<h2>Brython 編輯</h2>
<pre class="brush:html;auto-links:false;toolbar:false;highlight:10" contenteditable="false">    &lt;!-- "___"之內的文字為按鍵id名稱 --&gt;
    &lt;!-- "&gt;___&lt;/button&gt;之間的文字為按鍵在網頁上之名稱 --&gt;
&lt;p&gt;&lt;button id="____"&gt;____&lt;/button&gt;&lt;/p&gt;

&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
    &lt;script src="/static/brython.js"&gt;&lt;/script&gt;
    &lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
    &lt;script&gt;
        // &lt;![CDATA[
        window.onload = function() {
            brython({
                debug: 1,
                pythonpath: ['/static/', './../downloads/py/']
            });
        }
        // ]]&gt;
    &lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;!-- 導入 FileSaver 與 filereader --&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;script type="text/javascript" src="/static/ace/FileSaver.min.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="/static/ace/filereader.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;!-- 導入 ace --&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;script type="text/javascript" src="/static/ace/ace.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="/static/ace/ext-language_tools.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="/static/ace/mode-python3.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="/static/ace/snippets/python.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
    &lt;script src="/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
    &lt;script src="/static/gearUtils-09.js"&gt;&lt;/script&gt;
    &lt;script src="/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
    &lt;script src="/static/sylvester.js"&gt;&lt;/script&gt;
    &lt;script src="/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;script type="text/javascript"&gt;
        // &lt;![CDATA[
        function doSave(storage_id, filename) {
            var blob = new Blob([localStorage[storage_id]], {
                type: "text/plain;charset=utf-8"
            });
            filename = document.getElementById(filename).value
            saveAs(blob, filename + ".py");
        }
        // ]]&gt;
    &lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;script type="text/python3"&gt;//
        &lt;![CDATA[
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
       # 將程式 網址.py 放置在"___"之內
       url = "_______"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
// ]]&gt;
    &lt;/script&gt;
&lt;/p&gt;

&lt;p&gt;

    &lt;!-- #######-- _______ 開始  下方程式底線處為程式名稱 #######&gt;
    &lt;!-- _______ 開始 --&gt;
    &lt;script type="text/python3"&gt;//
        &lt;![CDATA[
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

# 000000_url 將000000設定網址名稱，此名稱必須跟add_src = open(000000_url).read() 中open之後的名稱對應
# 將 網址.py 放置在 "___"之內，此為一開始按鍵讀取的網址]
000000_url = "________"

# 從 gist 取得程式碼
add_src = open(000000_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# ["_____"]之內為一開始所設定的按鍵id，必須完全相同
doc["_____"].bind('click', add)
// ]]&gt;
    &lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;

    &lt;!-- -- _______ 結束  下方程式底線處為程式名稱 &gt;
    &lt;!-- _______ 結束 --&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;!-- editor1 開始 --&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;!-- 用來顯示程式碼的 editor 區域 --&gt;
&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;
    &lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;!-- 存擋表單開始 --&gt;
&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"&gt;&lt;/form&gt;
&lt;p&gt;
    &lt;!-- 存擋表單結束 --&gt;
&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;
    &lt;!-- 執行與清除按鈕開始 --&gt;
&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;
    &lt;!-- 執行與清除按鈕結束 --&gt;
&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;
    &lt;!-- 程式執行 ouput 區 --&gt;
&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;
    &lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;
&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;p&gt;
    &lt;!-- editor1 結束 --&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;
    &lt;!-- ########################################## --&gt;
&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</pre>
<p><br/><br/></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/40832244-github/d8b2556052e0846da9e0fb2446b34423/raw/c8134fe20345b8373962c577f206e06875cd5539/brycode.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form abframeid="iframe.0.9192231242352396" abineguid="401FC5451643458E86F9E1C4948679F5"><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p></p>
<h2>python筆記</h2>
<p>如何算出平均數</p>
<pre class="brush:html;toolbar:false" contenteditable="false">cp_score = []
# 從修課學員數列中, 逐一按照學號次序, 以重複迴圈將學號對應至 stud 變數
for stud in cp_stud:
    # 因為缺考學員在考試結果的 dict 中並無資料, 因此利用 try except 進行判斷
    try:
        # 針對 stud 學號, 有考試成績者, 列出其學號與得分
        #cp_quiz[stud] 為全班考試成績，將此設為一個變數a存在cp_score = []內，將資料帶出迴圈
        a = (cp_quiz[stud])
        cp_score.append(a)
        
 
    except:
        # 缺考者沒有 quiz 成績, 則在其成績欄位印出"缺"
        b = (0)
        # 同時將缺考學員學號以 append() 方法逐一置入
        cp_abs.append(stud)

#設總分tota;一開始為0
total=0
#設迴圈的變數為 i ，並將 i 的數字範圍為分數的個數，並將其加總維新總分
for i in range(0, len(cp_score)):
    total = total + cp_score[i]
print("本班總分:"+str(total)+"分")
#將總分平均除以班級人數可得班平均
average = total / len(cp_stud)
#round( a , 1 )在括弧內逗號左邊放想取小數點的變數，右邊放想娶到幾位數 
averageround = round(average, 3)
print("本次小考平均"+str(averageround)+"分")</pre>
<p>========================================================</p>
<p>len : 可算出也幾個資料數</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">len(放入變數)</pre>
<p>========================================================</p>
<p>str : 將數字變為字串，通常在書雌時使用</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">print("我是"+str(40832244)+"四設計四乙")
#若單存輸出數字則可單獨印出
print(40832244)</pre>
<p>同樣做輸出，python與C++相比，python較輕鬆許多，C++的輸出架構如下</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">#include&lt;iostream&gt;
using namespace std;

int main()
{

    cout &lt;&lt; "大家好" &lt;&lt; endl;
   //在&lt;&lt;____&lt;&lt;之間也可單純放入變數輸出變數，輸出的數字或字串隨運算而變

    return 0;
}</pre>
<p></p>
<p></p>
<h2>當大型擋案卡住無法上傳時解決辦法</h2>
<p><a href="https://stackoverflow.com/questions/19573031/cant-push-to-github-because-of-large-file-which-i-already-deleted">參考網站</a>及<a href="https://mde.tw/demo/content/Windows.html">老師的網站</a></p>
<p>若曾經推送大型檔案（大於GitHub所給的100mb），則會被擋住推送，就算刪除該大型檔案也是，就會出現一下畫面</p>
<p><img caption="false" height="277" src="/images/7ABB41FA-7314-433E-9153-2BF48F7F00BA.png" width="600"/></p>
<p>解決步驟如下：</p>
<p>1.查看有多少檔案存在推送歷史內：</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git checkout . (可查看有多少檔案存在index)
git checkout (會列出存在index的檔案名稱）</pre>
<p>2.<span class="s1">近端改版已經提交但尚未推送</span><span class="s2">, </span><span class="s1">希望刪除這些變更</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git reset —soft Head～</pre>
<p>若有數個推送次數想要刪除</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git reset —soft HEAD~2(數字為推送次數）</pre>
<p>3.最後只需要再去acp 就完成上傳了</p>
<h2>製作wink影片</h2>
<p>1.首先要將影片壓縮到100mb以下，並使用Filezilla丟到downloads檔案夾裡</p>
<p>2.將以下內容貼製編輯葉面中，並更改影片名稱</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;script&gt;// &lt;![CDATA[
var winkVideoData_學號 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;
&lt;div class="winkVideoContainerClass"&gt;&lt;video width="1008" height="630" autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_學號" muted="true"&gt;
&lt;source src="/downloads/影片名稱" type="video/mp4" /&gt;&lt;/video&gt;&lt;/div&gt;</pre>
<p>3.最後檢查是否成功，就完成了。</p>
<p></p>
<h1>心得總結</h1>
<p>      心得:在短短的一學期中，學到了許多新知識，對電腦似乎又更了解了一點。例如剛開始架設網站的方式就跟以往第一次修課時有極大的不同，還用到了Replit以及現在的Stud.cycu.org，並了解SSH通訊協定的用處。在期中時所繪製的零件是一台鑽床，雖然說使用了許多年，但也是對他的機構一知半解，這次獨立把所有零件畫出來，並從局部組裝到整體組裝，使我對鑽床的構造更為透徹。在下半學期時開始遇到一些新的問題，例如python的程式如何編寫、子模組如何重新拉取、SSH Key如果要刪除或是更改該如何做，或是開始使用Wink後發現檔案太大上傳卡住後該如何處理，大部分解決辦法都是上網找答案以及詢問老師，在上網查詢解答時也讓我了解到自己所學會的只是一點皮毛。例如期末考所做的彈珠台還有雙軸組立，放入程式後所遇到的問題都相同，也已經修改python的路徑了，所跳出的錯誤通知也並未得到修正，再加上期末考週時間上的不足，上網找了許久也並未找到解答(目前已解決問題)。這學期一路過來，要謝謝老師細心的指導，並且不會因為我一直問問題而不耐煩，才讓我在這學期的作業遇到的問題大部分都順利解決。</p>
<p></p>