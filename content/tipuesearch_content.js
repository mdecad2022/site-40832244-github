var tipuesearch = {"pages": [{'title': '40832244的倉儲', 'text': '\n \n \n \n 40832244的網站 :  https://mdecad2022.github.io/site-40832244-github/content/index.html \n 40832244的倉儲: https://github.com/mdecad2022/site-40832244-github \n cmsite(課程倉儲) : wcms use  https://github.com/mdecycu/cmsimde  as submodule \n ------------------------------------------------------------------------------------------------------- \n \n \n', 'tags': '', 'url': '40832244的倉儲.html'}, {'title': 'HW', 'text': 'W6 \n W8 \n W10 \n W11 \n W12 \n W13 \n W14 \n', 'tags': '', 'url': 'HW.html'}, {'title': 'W6', 'text': '零件 : https://mdecad2022.github.io/site-40832244-github/content/%E9%9B%B6%E4%BB%B6.html \n 組合 :\xa0https://mdecad2022.github.io/site-40832244-github/content/%E7%B5%84%E5%90%88.html \n', 'tags': '', 'url': 'W6.html'}, {'title': '零件', 'text': '\n ***由於剛開始繪製之零件1-12是使用wink3所錄製，測試過多次無法錄製完成就跳中止視窗，所以後續繪圖使用內建錄影來呈現，1-12之繪圖歷程可透過連結查看*** \n \n 1. 6203RS Bearing_step \xa0\xa0 (無影片) \n 2. Ball bearing _ODC32-IDC12__step \xa0 \xa0(無影片) \n 3. Base clamp_step \xa0 (無影片) \n 4. Base_step \xa0 (無影片) \n 5. Bolt_1_step \xa0 (無影片) \n 6. Bolt_step \xa0 (無影片) \n 7. Bottom safety guard_step   影片(00:00-10:03) \n 8. Clamp_step   影片(15:33-20:16) \n 9. Column_step \xa0(無影片) \n 10. Drill chuck _B16 0.5-13mm__step   影片(28:24.-39:06) \n 11. Driven pulley_step   影片(48:10-1:00:22) \n 12. Feed handle axle_step \xa0 (無影片) \n 13. Head_step   影片 \n 14. Knob axle_step   影片 \n 15. Motor tensioner clamp_step   影片 \n 16. Motor tensioner_step   影片 \n 17. Motor_step   影片 \n 18. Part 1_1_step   影片 \n 19. Part 1_step   影片 \n 20. Pulley_step   影片 \n 21. Rubber gasket_step   影片 \n 22. Rubber knob_step   影片 \n 23. Spindle guide_step   影片 \n 24. Spindle lock screw and nut_step   影片 \n 25. Spindle_step   影片 \n 25. Spline guider_step  影片 \n 26. Spring cap_step   影片 \n 27. Spring nut_step   影片 \n 29. Start Stop_step   影片 \n 30. Table clamp_step   影片 \n 31. Table_step   影片 \n 32. Top safety guard_step   影片 \n \n', 'tags': '', 'url': '零件.html'}, {'title': '組合', 'text': '1. Base subassy L1G_step   影片 \n 2. Feed handle subassy L1G_step   影片 \n 3. Spindle spline guider L1G_step   影片 \n 4. Spindle subassy L1G_step   影片 \n 5. Head subassy L1G_step   影片 \n 6. Motor subassy L1G_step   影片 \n 7. Safety guard subassy L1G_step   影片 \n 8. Table subassy L1G_step   影片 \n 9. Drill press - Ferm FTB-13M_1 \xa0 影片 \n \n', 'tags': '', 'url': '組合.html'}, {'title': 'W8', 'text': 'w8 課堂練習\xa0 Base clamp_step   影片 \n (*** NX所繪製之Base clamp step 無法上傳，請觀看影片***) \n \n \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W10', 'text': 'W10-1:列出缺考人員 \n w10-2:列出考試人員和成績 \n W10-1 W10-2 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  w11 結束 \n  add 1 to 100 開始  \n \n \n  w11 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': 'W11-1:缺考人數 \n w11-2:本次小考平均分數 \n W11-1 W11-2 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  w11 結束 \n  add 1 to 100 開始  \n \n \n  w11 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': 'W12:W10延伸題目 \n 1.如何直接讓使用者利用瀏覽器接受  w10 2b 考試結果 JSON 檔案 上傳, 然後直接列出考試結果, 缺考名單與該次考試的平均分數? \n W12 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  w11 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n \n', 'tags': '', 'url': 'W12.html'}, {'title': 'W13', 'text': '零件檔案 \n \n \n \n \n \n \n', 'tags': '', 'url': 'W13.html'}, {'title': 'w14', 'text': 'Sovelspace \xa0 \xa0 \xa0\xa0 Onshape \xa0 \xa0 \xa0 NX \n \n 在頁面列出 w14 缺考者名單 \n 輸入此Url\n https://nfu.cycu.org/?semester=1111&courseno=0786&column=True,https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/41ef20244a885c3daba8ee77652fd0717d3abda2/cad2022_w14_2b_quiz.json \n \n W14 W14(no input) \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  w11 結束 \n  add 1 to 100 開始  \n \n \n  w11 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n \n', 'tags': '', 'url': 'w14.html'}, {'title': 'Sovelspace', 'text': '零件檔 \n base \n \n shaft \n \n link \n \n assembly \n \n Wink Video \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n', 'tags': '', 'url': 'Sovelspace.html'}, {'title': 'Onshape', 'text': 'base \n \n shaft \n \n link \n \n assembly \n \n Wink Video \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n', 'tags': '', 'url': 'Onshape.html'}, {'title': 'NX', 'text': '零件檔 \n base \n \n shaft \n \n link \n \n Wink Video \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n', 'tags': '', 'url': 'NX.html'}, {'title': 'W15', 'text': '題:如何在 Solvespace 中組立雙連桿 robot, 轉入 CoppeliaSim 後以 Python script\xa0 進行操控. 要讓 CoppeliaSim 正確執行 Python script，必須安裝 cbor 與 zmq 模組，且要設定 system/usrset.txt 。 \n \n \n 還在努力ing . . .\xa0 \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W15.html'}, {'title': 'Note', 'text': '編輯子模組(cmsimde) \n ADD, REMOVE OR CHANGE PASSPHRASE OF AN SSH KEY \n Brython編寫 \n python筆記 \n 當大型擋住無法上傳時解決辦法 \n', 'tags': '', 'url': 'Note.html'}, {'title': '編輯子模組(cmsimde)', 'text': '參考網站 \xa0 \n 進入編輯網頁後之編輯指令:(向下 : J 向上 : K 刪除 : DD) \n 1.進入倉儲(cd s)\xa0 ➞ 進入 .git(cd .git)，使用指令(vi config)進入編輯comfig \n \n 使用dd刪除紅框內之文字 ➞ Esc ➞ : ➞ wq ➞ 完成編輯\xa0 \n \n 2.退回至倉儲(cd ..)\xa0 ➞ 使用指令(vi .gitmodules)進入編輯.gitmodules \n \n 使用dd刪除紅框內之文字 ➞ Esc ➞ : ➞ wq ➞ 完成編輯\xa0 \n \n 3.在倉儲執行\xa0 ➞\xa0 rm -rf cmsimde \n \n 4.執行\xa0 ➞\xa0 git rm --cached cmsimde \n \n 5.執行\xa0 ➞\xa0 rm -rf cmsimde/modules \n \n 6.執行\xa0 ➞\xa0 git submodules add  https://github.com/mdecycu/cmsimde \xa0cmsimde \n \n 完成修復cmsinde子模組 ! ! ! \n \n', 'tags': '', 'url': '編輯子模組(cmsimde).html'}, {'title': 'ADD, REMOVE OR CHANGE PASSPHRASE OF AN SSH KEY', 'text': "參考網站 \n \n 1.輸入: ssh-keygrn -p \n 2.Enter file in which the key is (/home/cad40832244/.ssh/id_rsa): 即為括弧內顯示之檔案，只需要按下Enter \n 3.Enter old passphrase: 輸入舊的密碼 \n 4.輸入完成會顯示: Key has comment 'cad40832244@tcexam' \n 4.Enter new passphrase (empty for no passphrase): 若需要更改或新增密碼則須輸入新的密碼，若不需要則不需輸入直接按Enter \n 5.Enter same passphrase again: 若更改或新增密碼就再輸入一次新密碼，刪除密碼就直接按Enter \n 6.輸入完成會顯示:\xa0Your identification has been saved with the new passphrase. 則完成更改、新增或刪除密碼 ! ! ! \n \n", 'tags': '', 'url': 'ADD, REMOVE OR CHANGE PASSPHRASE OF AN SSH KEY.html'}, {'title': 'Brython 編輯', 'text': '    <!-- "___"之內的文字為按鍵id名稱 -->\n    <!-- ">___</button>之間的文字為按鍵在網頁上之名稱 -->\n<p><button id="____">____</button></p>\n\n<!-- 導入 brython 程式庫 -->\n<p>\n    <script src="./../cmsimde/static/brython.js"></script>\n    <script src="./../cmsimde/static/brython_stdlib.js"></script>\n</p>\n<!-- 啟動 Brython -->\n<p>\n    <script>\n        // <![CDATA[\n        window.onload = function() {\n            brython({\n                debug: 1,\n                pythonpath: [\'/static/\', \'./../downloads/py/\']\n            });\n        }\n        // ]]>\n    </script>\n</p>\n<p>\n    <!-- 導入 FileSaver 與 filereader -->\n</p>\n<p>\n    <script type="text/javascript" src="./../cmsimde/static/ace/FileSaver.min.js"></script>\n    <script type="text/javascript" src="./../cmsimde/static/ace/filereader.js"></script>\n</p>\n<p>\n    <!-- 導入 ace -->\n</p>\n<p>\n    <script type="text/javascript" src="./../cmsimde/static/ace/ace.js"></script>\n    <script type="text/javascript" src="./../cmsimde/static/ace/ext-language_tools.js"></script>\n    <script type="text/javascript" src="./../cmsimde/static/ace/mode-python3.js"></script>\n    <script type="text/javascript" src="./../cmsimde/static/ace/snippets/python.js"></script>\n</p>\n<p>\n    <!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->\n    <script src="./../cmsimde/static/Cango-24v03-min.js"></script>\n    <script src="./../cmsimde/static/gearUtils-09.js"></script>\n    <script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"></script>\n    <script src="./../cmsimde/static/sylvester.js"></script>\n    <script src="./../cmsimde/static/PrairieDraw.js"></script>\n</p>\n<p>\n    <!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱-->\n</p>\n<p>\n    <script type="text/javascript">\n        // <![CDATA[\n        function doSave(storage_id, filename) {\n            var blob = new Blob([localStorage[storage_id]], {\n                type: "text/plain;charset=utf-8"\n            });\n            filename = document.getElementById(filename).value\n            saveAs(blob, filename + ".py");\n        }\n        // ]]>\n    </script>\n</p>\n<p>\n    <script type="text/python3">//\n        <![CDATA[\nfrom browser import document as doc\nimport ace\n# 清除畫布\ndef clear_bd1(ev):\n    bd = doc["brython_div1"]\n    bd.clear()\nAce1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )\n\n# 從 gist 取出程式碼後, 放入 editor 作為 default 程式\ndef run1():\n    # 利用 get 取下 src 變數值\n    try:\n        url = doc.query["src"]\n    except:\n       # 將程式 網址.py 放置在"___"之內\n       url = "_______"\n    prog = open(url).read()\n\n    # 將程式載入編輯區\n    Ace1.editor.setValue(prog)\n    Ace1.editor.scrollToRow(0)\n    Ace1.editor.gotoLine(0)\n    # 直接執行程式\n    #ns = {\'__name__\':\'__main__\'}\n    #exec(prog, ns)\n    # 按下 run 按鈕\n    Ace1.run()\n\n# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定\ndoc[\'kw_run1\'].bind(\'click\', Ace1.run)\ndoc[\'kw_show_console1\'].bind(\'click\', Ace1.show_console)\ndoc[\'kw_clear_console1\'].bind(\'click\', Ace1.clear_console)\ndoc[\'clear_bd1\'].bind(\'click\', clear_bd1)\n# 呼叫函式執行\nrun1()\n// ]]>\n    </script>\n</p>\n\n<p>\n\n    <!-- #######-- _______ 開始  下方程式底線處為程式名稱 #######>\n    <!-- _______ 開始 -->\n    <script type="text/python3">//\n        <![CDATA[\nfrom browser import document as doc\nimport ace\n\n# 清除畫布\ndef clear_bd1(ev):\n    bd = doc["brython_div1"]\n    bd.clear()\n\n# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件\nAce2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )\n\n# 000000_url 將000000設定網址名稱，此名稱必須跟add_src = open(000000_url).read() 中open之後的名稱對應\n# 將 網址.py 放置在 "___"之內，此為一開始按鍵讀取的網址]\n000000_url = "________"\n\n# 從 gist 取得程式碼\nadd_src = open(000000_url).read()\ndef add(ev):\n    Ace2.editor.setValue(add_src)\n    Ace2.editor.scrollToRow(0)\n    Ace2.editor.gotoLine(0)\n    Ace2.run()\n\n# ["_____"]之內為一開始所設定的按鍵id，必須完全相同\ndoc["_____"].bind(\'click\', add)\n// ]]>\n    </script>\n</p>\n<p>\n\n    <!-- -- _______ 結束  下方程式底線處為程式名稱 >\n    <!-- _______ 結束 -->\n</p>\n<p>\n    <!-- editor1 開始 -->\n</p>\n<p>\n    <!-- 用來顯示程式碼的 editor 區域 -->\n</p>\n<div id="kw_editor1" style="width: 600px; height: 300px;"></div>\n<p>\n    <!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 -->\n</p>\n<p>\n    <!-- 存擋表單開始 -->\n</p>\n<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text">.py</label> <input onclick="doSave(\'kw_py_src1\', \'kw_filename1\');" type="submit" value="Save"></form>\n<p>\n    <!-- 存擋表單結束 -->\n</p>\n<p></p>\n<p>\n    <!-- 執行與清除按鈕開始 -->\n</p>\n<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>\n<p>\n    <!-- 執行與清除按鈕結束 -->\n</p>\n<p></p>\n<p>\n    <!-- 程式執行 ouput 區 -->\n</p>\n<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>\n<p>\n    <!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 -->\n</p>\n<div id="brython_div1"></div>\n<p>\n    <!-- editor1 結束 -->\n</p>\n<hr>\n<p>\n    <!-- ########################################## -->\n</p>\n<p></p> \n \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n \n', 'tags': '', 'url': 'Brython 編輯.html'}, {'title': 'python筆記', 'text': '如何算出平均數 \n cp_score = []\n# 從修課學員數列中, 逐一按照學號次序, 以重複迴圈將學號對應至 stud 變數\nfor stud in cp_stud:\n    # 因為缺考學員在考試結果的 dict 中並無資料, 因此利用 try except 進行判斷\n    try:\n        # 針對 stud 學號, 有考試成績者, 列出其學號與得分\n        #cp_quiz[stud] 為全班考試成績，將此設為一個變數a存在cp_score = []內，將資料帶出迴圈\n        a = (cp_quiz[stud])\n        cp_score.append(a)\n        \n \n    except:\n        # 缺考者沒有 quiz 成績, 則在其成績欄位印出"缺"\n        b = (0)\n        # 同時將缺考學員學號以 append() 方法逐一置入\n        cp_abs.append(stud)\n\n#設總分tota;一開始為0\ntotal=0\n#設迴圈的變數為 i ，並將 i 的數字範圍為分數的個數，並將其加總維新總分\nfor i in range(0, len(cp_score)):\n    total = total + cp_score[i]\nprint("本班總分:"+str(total)+"分")\n#將總分平均除以班級人數可得班平均\naverage = total / len(cp_stud)\n#round( a , 1 )在括弧內逗號左邊放想取小數點的變數，右邊放想娶到幾位數 \naverageround = round(average, 3)\nprint("本次小考平均"+str(averageround)+"分") \n ======================================================== \n len : 可算出也幾個資料數 \n len(放入變數) \n ======================================================== \n str : 將數字變為字串，通常在書雌時使用 \n print("我是"+str(40832244)+"四設計四乙")\n#若單存輸出數字則可單獨印出\nprint(40832244) \n 同樣做輸出，python與C++相比，python較輕鬆許多，C++的輸出架構如下 \n #include<iostream>\nusing namespace std;\n\nint main()\n{\n\n    cout << "大家好" << endl;\n   //在<<____<<之間也可單純放入變數輸出變數，輸出的數字或字串隨運算而變\n\n    return 0;\n} \n \n \n', 'tags': '', 'url': 'python筆記.html'}, {'title': '當大型擋案卡住無法上傳時解決辦法', 'text': '參考網站 及 老師的網站 \n 若曾經推送大型檔案（大於GitHub所給的100mb），則會被擋住推送，就算刪除該大型檔案也是，就會出現一下畫面 \n \n 解決步驟如下： \n 1.查看有多少檔案存在推送歷史內： \n git checkout . (可查看有多少檔案存在index)\ngit checkout (會列出存在index的檔案名稱） \n 2. 近端改版已經提交但尚未推送 ,  希望刪除這些變更 \n git reset —soft Head～ \n 若有數個推送次數想要刪除 \n git reset —soft HEAD~2(數字為推送次數） \n 3.最後只需要再去acp 就完成上傳了', 'tags': '', 'url': '當大型擋案卡住無法上傳時解決辦法.html'}]};